{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.component.css","webpack:///./src/app/account/account.component.html","webpack:///./src/app/account/account.component.ts","webpack:///./src/app/account/account.service.ts","webpack:///./src/app/adddata/adddata.component.css","webpack:///./src/app/adddata/adddata.component.html","webpack:///./src/app/adddata/adddata.component.ts","webpack:///./src/app/adddata/adddata.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/employee/employee.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/login/token.interceptor.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/registration/registration.service.ts","webpack:///./src/app/shared/shared.service.ts","webpack:///./src/app/userdetails/userdetails.component.css","webpack:///./src/app/userdetails/userdetails.component.html","webpack:///./src/app/userdetails/userdetails.component.ts","webpack:///./src/app/userdetails/userdetails.service.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".tabledata{\\n\\tpadding-top: 20px;\\n    padding-left: 5%;\\n}\\n\\n.labelstyle{\\n\\tpadding-top: 5%;\\n}\\n\\n/* navbar */\\n\\n.topnav {\\n\\toverflow: hidden;\\n\\tbackground-color: #333;\\n  }\\n\\n.topnav a {\\n\\tfloat: left;\\n\\tcolor: #f2f2f2;\\n\\ttext-align: center;\\n\\tpadding: 14px 16px;\\n\\ttext-decoration: none;\\n\\tfont-size: 17px;\\n}\\n\\n.topnav a:hover {\\n\\tbackground-color: #ddd;\\n\\tcolor: black;\\n}\\n\\n.topnav a.active {\\n\\tbackground-color: #4CAF50;\\n\\tcolor: white;\\n}\\n\\n.topnav-right {\\n\\tfloat: right;\\n}\\n\\n/* navbar end */\\n\\n.setcolwidth{\\n\\twidth: 90px;\\n}\\n\\n/* modal message */\\n\\n.backdrop{ \\n\\tbackground-color:rgba(0,0,0,0.6);\\n\\tposition:fixed;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth:100%;\\n\\theight:100vh;\\t\\n}\\n\\n.frame {\\n\\twidth:100%; \\n\\tmargin-top:2%;\\n}\\n\\n@media only screen and (max-width:576px){\\n\\t.input-group {\\n\\t\\tmax-width: 320px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\t\\n\\n\\t.form-control {\\n\\t\\twidth: 57%;\\n\\t}\\n\\n\\t.input-group-append {\\n\\t\\twidth: 40%;\\n\\t}\\n  }\"","module.exports = \"<div class=\\\"topnav\\\">\\n    <a class=\\\"active\\\" (click)=\\\"navigateAccount()\\\">\\n        <span class=\\\"glyphicon glyphicon-home\\\"></span> Home\\n    </a>\\n    <a (click)=\\\"navigateAdd()\\\">Add new</a>\\n    <div class=\\\"topnav-right\\\">\\n        <a>\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span> {{ username }}</a>\\n        <a (click)=\\\"navigateallUsers()\\\">Users</a>\\n        <a (click)=\\\"Logout()\\\">\\n            <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n    </div>\\n</div>\\n\\n<!-- search -->\\n\\n<div class=\\\"container pt-5 pb-5\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-xl-4 col-lg-4 col-md-6 col-sm-6 labelstyle\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ngsrch\\\" placeholder=\\\"Search by account number, branch or account type\\\"\\n                    aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" #searchName/>\\n                <div class=\\\"input-group-append \\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-4\\\" (click)='getSearchData(searchName.value);'>\\n                        <span class=\\\"glyphicon glyphicon-search\\\"></span> Search\\n                    </button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btnclear\\\" (click)='clearSearch();'>\\n                        Clear\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"container frame\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\"> All account details\\n        </div>\\n        <div class=\\\"panel-body mt-5\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <caption>List of account</caption>\\n                    <thead class=\\\"thead-light\\\">\\n                        <tr>\\n                            <th>Sr.No</th>\\n                            <th>Account No</th>\\n                            <th>branch</th>\\n                            <th>Account Type</th>\\n                            <th>Gender</th>\\n                            <th>Edit </th>\\n                            <th>Remove</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let account of data | orderBy: accountType | filter:filter | paginate: {itemsPerPage: 5, currentPage: p } ; let i = index \\\">\\n                            <td class=\\\"setcolwidth\\\" scope=\\\"row\\\">{{ i + 1 }}</td>\\n                            <td>{{ account.accountNo }}</td>\\n                            <td>{{ account.branch }}</td>\\n                            <td>{{ account.accountType }}</td>\\n                            <td>{{ account.gender }}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"upadte_data(account.id, account.accountNo, account.branch, account.accountType, \\n                                        account.gender);\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                                </button>\\n                            </td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"staticModal.show();setDeleteId(account.id);\\\">\\n                                    <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row text-center\\\" style=\\\"font-family: cursive;\\\"> © 2018. Made with Amazatic Solutions by Suraj</div>\\n    </div>\\n</nav>\\n<!-- //getdata-->\\n\\n<!-- delete confirm message  -->\\n<div class=\\\"modal fade\\\" bsModal #staticModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title pull-left\\\">Delete</h4>\\n                <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"staticModal.hide()\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to delete ?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"width: 30%;\\\" (click)=\\\"staticModal.hide();\\\"> Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 30%;margin-left: 30%;\\\" (click)=\\\"deleteData();staticModal.hide();\\\">\\n                    Yes\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AccountService } from './account.service';\nimport { Response } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared/shared.service';\n// import { Sharedservice} from '../'\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\n\nexport class AccountComponent implements OnInit {\n  data: any;\n  acntId = '';\n  delId = '';\n  message = '';\n  ngsrch = '';\n  username = localStorage.getItem('username');\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private sharedservice: SharedService\n  ) { }\n\n  ngOnInit() {\n    if (!this.sharedservice.isTokenExits()) {\n      this.router.navigate(['/login']);\n    }\n      this.getAccountData();\n  }\n\n  // get request\n  private getAccountData() {\n    if (!this.sharedservice.isTokenExits()) {\n      this.router.navigate(['/login']);\n    }\n    this.accountService.getAccountDetails()\n      .subscribe(res => this.handleResponse(res),\n        err => this.handleError(err)\n      );\n  }\n\n  // search data\n  private getSearchData(name: string) {\n    console.log('under serch');\n    this.accountService.SearchAccountDeatils(name)\n      .subscribe(res => this.handleSearchResponse(res),\n        err => this.handleSearchError(err)\n      );\n  }\n\n  // store id for delete record\n  public setDeleteId(id: string) {\n    this.delId = id;\n  }\n\n  // delete data\n  public deleteData() {\n    this.accountService.deleteAccountRecord(this.delId).subscribe(\n      data => this.handleDeleteResponse(data),\n      err => this.handleError(err)\n    );\n  }\n\n  // for update\n  private upadte_data(id: string, accNo: string, branch: string, accType: string, gender: string) {\n    this.accountService.updated(id, accNo, branch, accType, gender);\n  }\n\n  // handle delete response\n  public handleDeleteResponse(res: any) {\n    this.data = res;\n    this.sharedservice.showMsg('successfully deleted!', 'success');\n    this.getAccountData();\n  }\n\n  private handleResponse(res: any) {\n    this.data = res.results;\n  }\n\n  public handleError(err: any) {\n    console.log('error is', err);\n  }\n  public handleSearchResponse(res: any) {\n    this.data = res.results;\n  }\n\n  private handleSearchError(err: any) {\n    if (err.status === 401) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  Logout() {\n    this.sharedservice.logout();\n  }\n\n  private clearSearch() {\n    this.ngsrch = '';\n    this.getAccountData();\n  }\n\n  private navigateAccount() {\n    this.router.navigate(['/account']);\n  }\n\n  private navigateAdd() {\n    this.router.navigate(['/add']);\n  }\n\n  private navigateallUsers() {\n    this.router.navigate(['/users']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared/shared.service';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { Conditional } from '@angular/compiler';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n@Injectable()\nexport class AccountService {\n\n    acid = '';\n    acNo = '';\n    branch = '';\n    acType = '';\n    gen = '';\n\n    constructor(\n                private http: HttpClient,\n                private router: Router,\n                private sharedservice: SharedService\n            ) {\n\n    }\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'Token ' + this.sharedservice.getToken()\n        })\n      };\n\n    // url = 'http://127.0.0.1:8000/api/account/';\n    url = 'https://account-test-project.herokuapp.com/api/account';\n\n    // simple http module\n    // headers = new Headers({ 'Content-Type': 'application/json', 'Authorization': 'Token ' + this.sharedservice.getToken() });\n    // options = new RequestOptions({ headers: this.headers });\n\n    getAccountDetails () {\n        return this.http.get(this.url, this.httpOptions);\n      }\n    SearchAccountDeatils(name: string) {\n        return this.http.get(this.url + '?search=' + name, this.httpOptions).map(\n            (res: Response) => this.handleMeResponse(res)).catch(\n                (err: Response) => this.handleMeError(err));\n    }\n\n    sendData(accNo: string, branch: string, accType: string) {\n        return this.http.post(this.url, {\n            accountNo: accNo,\n            branch: branch,\n            accountType: accType\n        },  this.httpOptions).map(\n            (res: Response) => this.handleMeResponse(res)).catch(\n                (err: Response) => this.handleMeError(err));\n    }\n\n\n    deleteAccountRecord(id: string) {\n        return this.http.delete(this.url + id + '/', this.httpOptions);\n    }\n    private handleMeResponse(res: Response) {\n        return res;\n    }\n\n    private handleMeError(err: Response) {\n        return Observable.throw(err);\n    }\n\n    updated(actid: string, accNo: string, branch: string, accType: string, gen: string) {\n        this.acid = actid;\n        this.acNo = accNo;\n        this.branch = branch;\n        this.acType = accType;\n        this.gen = gen;\n        this.router.navigate(['/add']);\n    }\n}\n","module.exports = \"\\n.tabledata{\\n\\tpadding-left: 5%;\\n\\tpadding-right: 30%;\\n}\\n\\n.topnav {\\n\\toverflow: hidden;\\n\\tbackground-color: #333;\\n  }\\n\\n.topnav a {\\n\\tfloat: left;\\n\\tcolor: #f2f2f2;\\n\\ttext-align: center;\\n\\tpadding: 14px 16px;\\n\\ttext-decoration: none;\\n\\tfont-size: 17px;\\n}\\n\\n.topnav a:hover {\\n\\tbackground-color: #ddd;\\n\\tcolor: black;\\n}\\n\\n.topnav a.active {\\n\\tbackground-color: #4CAF50;\\n\\tcolor: white;\\n}\\n\\n.topnav-right {\\n\\tfloat: right;\\n}\"","module.exports = \"<div class=\\\"topnav\\\">\\n  <a (click)=\\\"navigateAccount()\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\"></span> Home\\n  </a>\\n  <a class=\\\"active\\\" (click)=\\\"navigateAdd()\\\">Add new</a>\\n  <div class=\\\"topnav-right\\\">\\n    <a>\\n      <span class=\\\"glyphicon glyphicon-user\\\"></span> {{ username }}</a>\\n    <a (click)=\\\"navigateallUsers()\\\">Users</a>\\n\\n    <a (click)=\\\"Logout()\\\">\\n      <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n  </div>\\n</div>\\n\\n<div style=\\\"width:40%;margin-top:10%;\\\" class=\\\"container\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\"> Add new account\\n    </div>\\n    <div class=\\\"panel-body mt-3 mb-4\\\">\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"aNo\\\">Account Number: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"ngacno\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Account Number\\\" aria-label=\\\"AccNo\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #aNo/>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.accountNo }} </span>\\n      </div>\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"branch\\\">Branch Name: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"ngbn\\\" class=\\\"form-control\\\" placeholder=\\\"Enter bank branch\\\" aria-label=\\\"branch\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #branch/>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.branch }} </span>\\n      </div>\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"aType\\\">Account Type: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"ngat\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Account Type\\\" aria-label=\\\"accType\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #aType/>\\n        <span *ngIf=\\\"is_error \\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.accountType }} </span>\\n      </div>\\n      <div class=\\\"pb-3\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" (click)=\\\"setradio('M')\\\" id=\\\"inlineRadio1\\\" value=\\\"M\\\"\\n            [(ngModel)]=\\\"ngmale\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\">Male</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" (click)=\\\"setradio('F')\\\" id=\\\"inlineRadio2\\\" value=\\\"F\\\"\\n            [(ngModel)]=\\\"ngfemale\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">Female</label>\\n          \\n        </div>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.gender }} </span>\\n      </div>\\n      <div class=\\\"text-center mt-4\\\">\\n        <!-- <input class=\\\"btn btn-primary add\\\" type=\\\"submit\\\" (click)=\\\"saveData(aNo.value, branch.value, aType.value);\\\" /> using bootstrap-->\\n        <button mat-flat-button (click)=\\\"saveData(aNo.value, branch.value, aType.value);\\\">submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row text-center\\\" style=\\\"font-family: cursive;\\\"> © 2018. Made with Amazatic Solutions by Suraj</div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AddDataService } from './adddata.service';\nimport { Router } from '@angular/router';\nimport { Response } from '@angular/http';\nimport { AccountService } from '../account/account.service';\nimport { SharedService } from '../shared/shared.service';\n\n@Component({\n  selector: 'app-adddata',\n  templateUrl: './adddata.component.html',\n  styleUrls: ['./adddata.component.css']\n})\nexport class AdddataComponent implements OnInit {\n\n  errInfo: any;\n  is_error = false;\n  data: any;\n  ngacno = '';\n  ngbn = '';\n  ngat = '';\n  acntId = '';\n  gend = '';\n  ngmale = '';\n  ngfemale = '';\n  msg = '';\n  srch = '';\n  username = localStorage.getItem('username');\n\n  constructor(\n              private addDataService: AddDataService,\n              private router: Router,\n              private accountService: AccountService,\n              private sharedservice: SharedService\n            ) { }\n\n  ngOnInit() {\n    this.saveDefault();\n    this.getID();\n    if ( !this.sharedservice.isTokenExits()) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  // when save data clear the textbox\n  private saveDefault() {\n    this.ngacno = this.ngat = this.ngbn = this.gend = this.ngmale = this.ngfemale = null;\n  }\n\n  // search data\n  private getSearchData(name: string) {\n    this.accountService.SearchAccountDeatils(name)\n      .subscribe(res => this.handleSearchResponse(res),\n        err => this.handleError(err)\n      );\n  }\n\n  // save the data\n  private saveData(accNo: string, branch: string, accType: string) {\n    if (this.acntId === '') {\n      this.msg = 'successfully saved!';\n      this.addDataService.sendData(accNo, branch, accType, this.gend)\n        .subscribe(res => this.handlePostResponse(res),\n          err => this.handleError(err)\n        );\n    } else if (this.acntId !== '') {\n      this.msg = 'successfully updated!';\n      this.addDataService.updateData(this.acntId, accNo, branch, accType, this.gend)\n        .subscribe(res => this.handlePostResponse(res),\n          err => this.handleError(err)\n        );\n    }\n  }\n\n  public handlePostResponse(res: any) {\n    this.is_error = false;\n    this.data = res.results;\n    this.saveDefault();\n    this.acntId = '';\n    this.sharedservice.showMsg(this.msg, 'success');\n    this.msg = '';\n    this.router.navigate(['/account']);\n  }\n\n  public handleError(err: any) {\n    this.is_error = true;\n    this.errInfo =  err.error;\n    console.log('error is', err);\n  }\n\n  public handleSearchResponse(res: any) {\n    this.data = res.results;\n  }\n  public getID() {\n    this.ngacno = this.accountService.acNo;\n    this.ngbn = this.accountService.branch;\n    this.ngat = this.accountService.acType;\n    this.acntId = this.accountService.acid;\n    this.gend = this.accountService.gen;\n    if (this.gend === 'M') {\n      this.ngmale = this.gend;\n    } else {\n      this.ngfemale = this.gend;\n    }\n  }\n\n  Logout() {\n    this.sharedservice.logout();\n  }\n\n  private clearSearch() {\n    this.srch = '';\n  }\n\n  private navigateAccount() {\n    this.router.navigate(['/account']);\n  }\n\n  private navigateAdd() {\n    this.router.navigate(['/add']);\n  }\n\n  private setradio(gender: string) {\n    this.gend = gender;\n  }\n\n  private navigateUserDetails() {\n    this.router.navigate(['/userdetails']);\n  }\n\n  private navigateallUsers() {\n    this.router.navigate(['/users']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions } from '@angular/http';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\n// import { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { SharedService } from '../shared/shared.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class AddDataService {\n\n    constructor(\n                private http: HttpClient,\n                private sharedservice: SharedService\n             ) {}\n    // url = 'http://127.0.0.1:8000/api/account/';\n    url = 'https://account-test-project.herokuapp.com/api/account/';\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'Token ' + this.sharedservice.getToken()\n        })\n      };\n\n\n    sendData(accNo: string, branch: string, accType: string, gendr: string) {\n        return this.http.post(this.url, {\n            accountNo: accNo,\n            branch: branch,\n            accountType: accType,\n            gender: gendr\n        },  this.httpOptions);\n        // .map(\n        //     (res: Response) => this.handleMeResponse(res)).catch(\n        //         (err: Response) => this.handleMeError(err));\n    }\n\n\n    updateData(actid: string, accNo: string, branch: string, accType: string, gender: string) {\n        return this.http.put(this.url + actid + '/', {\n            accountNo: accNo,\n            branch: branch,\n            accountType: accType,\n            gender: gender\n        },  this.httpOptions);\n        // .map(\n        //     (res: Response) => this.handleMeResponse(res)).catch(\n        //         (err: Response) => this.handleMeError(err));\n    }\n\n    private handleMeResponse(res: Response) {\n        return res;\n   }\n\n   private handleMeError(err: Response) {\n      // return Observable.throw(err);\n   }\n}\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AccountComponent } from './account/account.component';\nimport { AccountService } from './account/account.service';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeService } from './employee/employee.service';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './login/login.service';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // <== add the imports!\nimport { CookieService } from 'ngx-cookie';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { AdddataComponent } from './adddata/adddata.component';\nimport { AddDataService } from './adddata/adddata.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { RegistrationService } from './registration/registration.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './login/token.interceptor';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { UserdetailsComponent } from './userdetails/userdetails.component';\nimport { UserDetailsService } from './userdetails/userdetails.service';\nimport { UsersComponent } from './users/users.component';\nimport { UsersService } from './users/users.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    EmployeeComponent,\n    LoginComponent,\n    AdddataComponent,\n    RegistrationComponent,\n    UserdetailsComponent,\n    UsersComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2OrderModule,\n    Ng2SearchPipeModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n    ModalModule.forRoot(),\n    RouterModule.forRoot ([\n      { path: '', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'account', component: AccountComponent },\n      { path: 'employee', component: EmployeeComponent },\n      { path: 'add', component: AdddataComponent },\n      { path: 'userdetails', component: UserdetailsComponent },\n      { path: 'users', component: UsersComponent}\n\n    ])\n  ],\n  providers: [AccountService,\n              EmployeeService,\n              LoginService,\n              CookieService,\n              AddDataService,\n              RegistrationService,\n              UsersService,\n              UserDetailsService,\n              {\n                provide: HTTP_INTERCEPTORS,\n                useClass: TokenInterceptor,\n                multi: true\n              }\n            ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n  <button (click)= getEmployeeData()>Get Employee</button>\\n  <table>\\n    <tr>\\n        <th>Id</th>\\n        <th>name</th>\\n        <th>account</th>\\n    </tr>\\n    <tr *ngFor=\\\"let emp of data\\\" style=\\\"margin-bottom: 10px;\\\">\\n        <td>{{emp.id}}</td>\\n        <td>{{emp.name}}</td>\\n        <td>{{emp.account}}</td>\\n    </tr>\\n</table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { EmployeeService } from './employee.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  data: any;\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n  }\n\n  private getEmployeeData() {\n    this.employeeService.getEmployeeDetails()\n      .subscribe(res => this.responseHandle(res),\n        err => this.getError(err)\n      );\n  }\n\n  private responseHandle(res: any) {\n    this.data = JSON.parse(res._body).results;\n    console.log('responeHandle => ', this.data);\n  }\n\n  private getError(err: any) {\n    console.log('errorResponseHandle => ', err);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class EmployeeService {\n\n    constructor(private http: Http) {}\n    url = 'http://127.0.0.1:8000/api/employee/';\n    headers = new Headers({ 'Content-Type': 'application/json'});\n    options = new RequestOptions({ headers: this.headers });\n\n    getEmployeeDetails() {\n        return this.http.get(this.url, this.options);\n    }\n}\n","module.exports = \".labelstyle{\\n\\tpadding-top: 10px;\\n}\\n\\n.add{\\n\\tmargin-top: 20px;\\n}\\n\\n.row{\\n\\tpadding-top: 10%;\\n}\\n\\n.example-full-width {\\n\\twidth: 100%;\\n\\t}\"","module.exports = \"<div class=\\\"topnav\\\">\\n  <a class=\\\"active\\\" href=\\\"/login\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a>\\n  <a href=\\\"/login\\\">Contact</a>\\n  <div class=\\\"topnav-right\\\">\\n    <a href=\\\"/login\\\">About</a>\\n    <a href=\\\"\\\">Sign up</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"container-fluid \\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-sm-4 border \\\">\\n      <h3>Login form</h3>\\n\\n      <!-- using angular material- start -->\\n      <div>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.non_field_errors }} </span>\\n        <br>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Enter user name\\\" #Uname>\\n        </mat-form-field>\\n        <br>\\n      </div>\\n\\n      <div>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" #pass>\\n        </mat-form-field>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.password }} </span>\\n      </div>\\n\\n      <div class=\\\"labelstyle\\\">\\n        <button mat-flat-button title=\\\"click for login\\\" (click)='sendUserCredentials(Uname.value, pass.value);'>submit</button>\\n      </div>\\n\\n      <br>\\n      <br>\\n      <div>\\n        <a href=\\\"#\\\">Create account</a>\\n      </div>\\n\\n      <!-- using angular material- end -->\\n\\n\\n      <!-- using bootstrap- start -->\\n      <!-- <div class=\\\"labelstyle\\\">\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.non_field_errors }} </span>\\n        <br>\\n        <label for=\\\"UserName\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter user name\\\" aria-label=\\\"username\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #Uname/>\\n        <!-- <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.password }} </span> \\n      </div>\\n\\n      <div class=\\\"labelstyle\\\">\\n        <label for=\\\"Password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\" aria-label=\\\"password\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #pass/>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.password }} </span>\\n      </div> \\n\\n      <div class=\\\"labelstyle\\\">\\n        <input class=\\\"btn btn-primary add\\\" type=\\\"submit\\\" (click)='sendUserCredentials(Uname.value, pass.value);' />\\n      </div>- -->\\n      <!-- using bootstrap- end -->\\n\\n\\n\\n      <br>\\n      <br>\\n    </div>\\n  </div>\\n  <nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container\\\">\\n        © 2018. Made with Amazatic Solutions by Suraj\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { Response } from '@angular/http';\n// import { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../shared/shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  errInfo: any;\n  is_error = false;\n  token: any;\n  hide = true;\n  // cookieValue = 'UNKNOWN';\n\n  constructor(\n              private loginService: LoginService,\n              private router: Router,\n              private sharedService: SharedService\n    // private cookieService: CookieService,\n    ) { }\n\n  ngOnInit() {\n     this.sharedService.logout();\n  }\n\n  sendUserCredentials(username: string, password: string) {\n    localStorage.setItem('username', username);\n    this.loginService.loginData(username, password).subscribe(\n      data => this.handleMeResponse(data),\n      err => this.handleMeError(err)\n    );\n  }\n\n  private handleMeResponse(response: any) {\n    localStorage.setItem('Detail_cookie', response.key);\n    this.is_error = false;\n    //  this.cookieService.set( 'login_cookie', this.token );\n    //  this.cookieValue = this.cookieService.get('login_cookie');\n    //  console.log(this.cookieValue);\n     this.router.navigate(['/account']);\n  }\n\n  private handleMeError(err: any) {\n    console.log('errr', err);\n    this.is_error = true;\n     this.errInfo = err.error;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class LoginService {\n\n    constructor( private http: HttpClient) { }\n\n    // url = 'http://127.0.0.1:8000/';\n    url = 'https://account-test-project.herokuapp.com/';\n\n    headers = new Headers({ 'Content-Type': 'application/json' });\n    options = new RequestOptions({ headers: this.headers });\n\n    loginData(user: string, pass: string) {\n        return this.http.post(this.url + 'rest-auth/login/', { username: user, password: pass });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\n\nimport { SharedService } from '../shared/shared.service';\nimport { Observable } from 'rxjs/Observable';\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(public auth: SharedService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (request.url !== 'http://127.0.0.1:8000/rest-auth/login/') {\n            if (request.url !== 'http://127.0.0.1:8000/api/signup/') {\n                request = request.clone({\n                    setHeaders: {\n                        Authorization: `Token ${this.auth.getToken()}`\n                    }\n                });\n            }\n        }\n        return next.handle(request);\n    }\n}\n","module.exports = \"\\n.labelstyle{\\n\\tpadding-top: 10px;\\n}\\n\\n.add{\\n\\tmargin-top: 20px;\\n}\\n\\n.row{\\n\\tpadding-top: 7%;\\n}\\n\\n.example-full-width {\\n\\twidth: 100%;\\n  }\"","module.exports = \"<div class=\\\"topnav\\\">\\n  <a class=\\\"active\\\" href=\\\"\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a>\\n  <a href=\\\"\\\">Contact</a>\\n  <div class=\\\"topnav-right\\\">\\n    <a href=\\\"/login\\\">\\n      <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Sign in</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-sm-4 border\\\">\\n      <div>\\n        <h3>Registration form</h3>\\n      </div>\\n\\n      <!-- using material strat -->\\n      <div>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.non_field_errors }} </span>\\n        <br>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Enter user name\\\" #Uname></textarea>\\n        </mat-form-field>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.username }} </span>\\n      </div>\\n      <div>\\n        <br>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Enter email address\\\" #email></textarea>\\n        </mat-form-field>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.email }} </span>\\n      </div>\\n      <div>\\n        <br>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput [type]=\\\"hide ? 'password' : 'text'\\\" placeholder=\\\"Enter password\\\" #pass></textarea>\\n        </mat-form-field>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.password }} </span>\\n      </div>\\n      <div>\\n        <button mat-flat-button title=\\\"save the details\\\" (click)='sendUserCredentials(Uname.value, email.value, pass.value);'>submit</button>\\n      </div>\\n      <br>\\n      <br>\\n      <div>\\n        <a href=\\\"/login\\\">Sign in instead</a>\\n      </div>\\n\\n      <!-- using material end -->\\n\\n      <!-- using bootstrap strat -->\\n      <!-- <div class=\\\"labelstyle\\\">\\n          <!-- <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.non_field_errors }} </span> \\n          <br>\\n          <label for=\\\"UserName\\\">User name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter user name\\\" aria-label=\\\"username\\\" aria-describedby=\\\"basic-addon1\\\"\\n            #Uname/>\\n          <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.username }} </span>\\n        </div>\\n        <div class=\\\"labelstyle\\\">\\n          <br>\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email address\\\" aria-label=\\\"email\\\" aria-describedby=\\\"basic-addon1\\\"\\n            #email/>\\n          <!-- <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.email }} </span> \\n        </div>\\n        <div class=\\\"labelstyle\\\">\\n          <br>\\n          <label for=\\\"Password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter password\\\" aria-label=\\\"password\\\" aria-describedby=\\\"basic-addon1\\\"\\n            #pass/>\\n          <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.password }} </span>\\n        </div>\\n        <div class=\\\"labelstyle\\\">\\n            <input class=\\\"btn btn-primary add\\\" type=\\\"submit\\\" title=\\\"save the details\\\" (click)='sendUserCredentials(Uname.value, email.value, pass.value);'\\n          />\\n          </div>\\n        <!-- using bootstrap end -->\\n\\n      <br>\\n      <br>\\n    </div>\\n  </div>\\n  <nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n      <div class=\\\"container\\\">\\n          © 2018. Made with Amazatic Solutions by Suraj\\n      </div>\\n    </nav>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegistrationService } from './registration.service';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared/shared.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  errInfo: any;\n  is_error = false;\n  passmatch = '';\n\n  constructor(\n  private registrationService: RegistrationService,\n  private router: Router,\n  private sharedService: SharedService\n\n) { }\n\n  ngOnInit() {\n    localStorage.removeItem('Detail_cookie');\n  }\n\n  sendUserCredentials(username: string, email: string, password: string) {\n    this.registrationService.RegisterData(username, email, password).subscribe(\n      data => this.handleMeResponse(data),\n      err => this.handleMeError(err)\n    );\n  }\n\n  private handleMeResponse(response: any) {\n    this.is_error = false;\n    this.sharedService.showMsg('user registered successfully', 'success');\n    this.router.navigate(['/login']);\n\n    //  this.cookieService.set( 'login_cookie', this.token );\n    //  this.cookieValue = this.cookieService.get('login_cookie');\n    //  console.log(this.cookieValue);\n    //  this.router.navigate(['/account']);\n  }\n\n  private handleMeError(err: any) {\n    this.is_error = true;\n     this.errInfo = err.error;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class RegistrationService {\n\n    constructor(private http: HttpClient) { }\n    // url = 'http://127.0.0.1:8000/api/';\n    url = 'https://account-test-project.herokuapp.com/api/';\n    headers = new Headers({ 'Content-Type': 'application/json' });\n\n    RegisterData(username: string, email: string, password: string) {\n        return this.http.post(this.url + 'signup/', {\n            username: username, eamil: email, password: password, is_staff: true\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  token: string;\n  constructor(\n              private router: Router,\n              private toastr: ToastrService,\n  ) {\n    this.token = '';\n  }\n\n  isTokenExits() {\n    this.token = localStorage.getItem('Detail_cookie');\n    if (this.token !== null) {\n        return true;\n    } else {\n        return false;\n    }\n  }\n\n  getToken() {\n    try {\n    return localStorage.getItem('Detail_cookie');\n  } catch {\n      console.log('token not exits!');\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('Detail_cookie');\n    this.router.navigate(['/login']);\n  }\n\n  showMsg(msg: string, header: string) {\n    this.toastr.success(msg, header);\n  }\n}\n","module.exports = \"\\n\\n\\n/* navbar */\\n.topnav {\\n\\toverflow: hidden;\\n\\tbackground-color: #333;\\n  }\\n.topnav a {\\n\\tfloat: left;\\n\\tcolor: #f2f2f2;\\n\\ttext-align: center;\\n\\tpadding: 14px 16px;\\n\\ttext-decoration: none;\\n\\tfont-size: 17px;\\n}\\n.topnav a:hover {\\n\\tbackground-color: #ddd;\\n\\tcolor: black;\\n}\\n.topnav a.active {\\n\\tbackground-color: #4CAF50;\\n\\tcolor: white;\\n}\\n.topnav-right {\\n\\tfloat: right;\\n}\\n.setcolwidth{\\n\\twidth: 90px;\\n}\\n.backdrop{ \\n\\tbackground-color:rgba(0,0,0,0.6);\\n\\tposition:fixed;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth:100%;\\n\\theight:100vh;\\t\\n}\"","module.exports = \"<div class=\\\"topnav\\\">\\n  <a (click)=\\\"navigateAccount()\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\"></span> Home\\n  </a>\\n  <a (click)=\\\"navigateAdd()\\\">Add new</a>\\n  <div class=\\\"topnav-right\\\">\\n    <a>\\n      <span class=\\\"glyphicon glyphicon-user active\\\"></span> {{ usernm }}</a>\\n      <a (click)=\\\"navigateallUsers()\\\">Users</a>\\n    <a (click)=\\\"Logout()\\\">\\n      <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n  </div>\\n</div>\\n\\n<div style=\\\"width:25%;margin-top:10%;\\\" class=\\\"container\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\"> User details\\n    </div>\\n    <div class=\\\"panel-body mt-3 mb-4\\\">\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"aNo\\\">Username: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"nguname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter username\\\" aria-label=\\\"AccNo\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #username/>\\n        <span *ngIf=\\\"is_error\\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.username }} </span>\\n      </div>\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"branch\\\">First Name: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"ngfname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter first name\\\" aria-label=\\\"branch\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #fname/>\\n      </div>\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"aType\\\">Last Name: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"nglname\\\" class=\\\"form-control\\\" placeholder=\\\"Enter last name\\\" aria-label=\\\"accType\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #lname/>\\n      </div>\\n\\n      <div class=\\\"pb-5\\\">\\n        <label for=\\\"aType\\\">Email: </label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"ngemail\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email address\\\" aria-label=\\\"accType\\\" aria-describedby=\\\"basic-addon1\\\"\\n          #email/>\\n        <span *ngIf=\\\"is_error \\\" style=\\\"color:red;\\\" class=\\\"help-block validation\\\" autofocus>{{ errInfo.email }} </span>\\n      </div>\\n\\n      <div>\\n        <button mat-flat-button class=\\\"add mt-4\\\" (click)=\\\"saveData(username.value, fname.value, lname.value, email.value);\\\">submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom \\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row text-center\\\" style=\\\"font-family: cursive;\\\"> © 2018. Made with Amazatic Solutions by Suraj</div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '../shared/shared.service';\nimport { Router } from '@angular/router';\nimport { UserDetailsService } from './userdetails.service';\nimport { UsersService } from '../users/users.service';\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n\n  errInfo: any;\n  is_error = false;\n  data: any;\n  msg = '';\n  usernm = localStorage.getItem('username');\n  nguname = '';\n  ngfname = '';\n  nglname = '';\n  ngemail = '';\n  pass = '';\n  uid = '';\n\n  constructor(\n    private sharedservice: SharedService,\n    private router: Router,\n    private udService: UserDetailsService,\n    private usersService: UsersService\n  ) { }\n\n  ngOnInit() {\n    if (!this.sharedservice.isTokenExits()) {\n      this.router.navigate(['/login']);\n    }\n    this.getID();\n  }\n\n  public getID() {\n    this.uid = this.usersService.uid;\n    if (this.uid === '') {\n      this.router.navigate(['/users']);\n      return;\n    }\n      this.udService.getUserDetails(this.uid)\n        .subscribe(res => this.handleResponse(res),\n          err => this.handleError(err)\n        );\n  }\n\n  // save the data\n  private saveData(username: string, fname: string, lname: string, email: string) {\n    this.msg = 'successfully updated!';\n    this.udService.updateData(this.uid, username, fname, lname, email, this.pass)\n      .subscribe(res => this.handlePostResponse(res),\n        err => this.handleError(err)\n      );\n  }\n\n  public handlePostResponse(res: any) {\n    this.is_error = false;\n    this.data = res.results;\n    this.sharedservice.showMsg(this.msg, 'success');\n    this.msg = '';\n    this.router.navigate(['/users']);\n  }\n\n  public handleResponse(res: any) {\n    this.pass = res.password;\n    this.nguname = res.username;\n    this.ngfname = res.first_name;\n    this.nglname = res.last_name;\n    this.ngemail = res.email;\n  }\n\n  public handleError(err: any) {\n    this.is_error = true;\n    this.errInfo = err.error;\n    console.log('err', err);\n  }\n\n  Logout() {\n    this.sharedservice.logout();\n  }\n\n  private navigateAccount() {\n    this.router.navigate(['/account']);\n  }\n\n  private navigateAdd() {\n    this.router.navigate(['/add']);\n  }\n\n  private navigateallUsers() {\n    this.router.navigate(['/users']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions } from '@angular/http';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { SharedService } from '../shared/shared.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class UserDetailsService {\n\n    constructor(\n        private http: HttpClient,\n        private sharedservice: SharedService\n    ) { }\n    // url = 'http://127.0.0.1:8000/api/user/';\n    url = 'https://account-test-project.herokuapp.com/api/user/';\n\n    httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.sharedservice.getToken()\n        })\n    };\n\n    getUserDetails(uid: string) {\n        return this.http.get(this.url + uid + '/', this.httpOptions);\n    }\n\n    updateData(uid: string, username: string, fname: string, lname: string, email: string, pass: string) {\n        return this.http.put(this.url + uid + '/' , {\n            password: pass,\n            username: username,\n            first_name: fname,\n            last_name: lname,\n            email: email,\n        }, this.httpOptions).map(\n            (res: Response) => this.handleMeResponse(res)).catch(\n                (err: Response) => this.handleMeError(err));\n    }\n\n    private handleMeResponse(res: Response) {\n        return res;\n    }\n\n    private handleMeError(err: Response) {\n        return Observable.throw(err);\n    }\n}\n","module.exports = \".tabledata{\\n\\tpadding-top: 20px;\\n    padding-left: 5%;\\n}\\n\\n.labelstyle{\\n\\n\\tpadding-top: 5%;\\n}\\n\\n/* navbar */\\n\\n.topnav {\\n\\toverflow: hidden;\\n\\tbackground-color: #333;\\n  }\\n\\n.topnav a {\\n\\tfloat: left;\\n\\tcolor: #f2f2f2;\\n\\ttext-align: center;\\n\\tpadding: 14px 16px;\\n\\ttext-decoration: none;\\n\\tfont-size: 17px;\\n}\\n\\n.topnav a:hover {\\n\\tbackground-color: #ddd;\\n\\tcolor: black;\\n}\\n\\n.topnav a.active {\\n\\tbackground-color: #4CAF50;\\n\\tcolor: white;\\n}\\n\\n.topnav-right {\\n\\tfloat: right;\\n}\\n\\n.setcolwidth{\\n\\twidth: 90px;\\n}\\n\\n.backdrop{ \\n\\tbackground-color:rgba(0,0,0,0.6);\\n\\tposition:fixed;\\n\\ttop:0;\\n\\tleft:0;\\n\\twidth:100%;\\n\\theight:100vh;\\t\\n}\\n\\n.frame {\\n\\twidth:100%; \\n\\tmargin-top:10%;\\n}\"","module.exports = \"<div class=\\\"topnav\\\">\\n  <a (click)=\\\"navigateAccount()\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\"></span> Home\\n  </a>\\n  <a (click)=\\\"navigateAdd()\\\">Add new</a>\\n\\n  <div class=\\\"topnav-right\\\">\\n    <a>\\n      <span class=\\\"glyphicon glyphicon-user\\\"></span> {{ username }}</a>\\n    <a class=\\\"active\\\" (click)=\\\"navigateallUsers()\\\">Users</a>\\n    <a (click)=\\\"Logout()\\\">\\n      <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div  class=\\\"container frame\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\"> All users\\n      </div>\\n      <div class=\\\"panel-body mt-5\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-hover \\\">\\n            <caption>List of users</caption>\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th>Sr.No</th>\\n                <th>username</th>\\n                <th>First Name</th>\\n                <th>Last Name</th>\\n                <th>Email</th>\\n                <th>Edit</th>\\n                <th>Remove</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of data | orderBy: accountType | filter:filter | paginate: {itemsPerPage: 5, currentPage: p } ; let i = index \\\">\\n                <td class=\\\"setcolwidth\\\" scope=\\\"row\\\">{{ i + 1 }}</td>     \\n                <td>{{ user.username }}</td>\\n                <td>{{ user.first_name }}</td>\\n                <td>{{ user.last_name }}</td>\\n                <td>{{ user.email }}</td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"upadte_data(user.id);\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                  </button>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"staticModal.show();setDeleteId(user.id);\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row text-center\\\" style=\\\"font-family: cursive;\\\"> © 2018. Made with Amazatic Solutions by Suraj</div>\\n  </div>\\n</nav>\\n<!-- //getdata -->\\n\\n<!-- delete confirm message  -->\\n\\n<div class=\\\"modal fade\\\" bsModal #staticModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Delete</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"staticModal.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        Are you sure you want to delete ?\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"width: 30%;\\\" (click)=\\\"staticModal.hide();\\\"> Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 30%;margin-left: 30%;\\\" (click)=\\\"deleteData();staticModal.hide();\\\">\\n          Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '../shared/shared.service';\nimport { Router } from '@angular/router';\nimport { UsersService } from './users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  errInfo: any;\n  is_error = false;\n  data: any;\n  msg = '';\n  delId = '';\n  username = localStorage.getItem('username');\n\n  constructor(\n    private sharedservice: SharedService,\n    private router: Router,\n    private userService: UsersService\n  ) { }\n\n  ngOnInit() {\n    if (!this.sharedservice.isTokenExits()) {\n      this.router.navigate(['/login']);\n    }\n    this.getUserDetails();\n  }\n\n  private getUserDetails() {\n    this.userService.getUserDetails()\n      .subscribe(res => this.handleResponse(res),\n        err => this.handleError(err)\n      );\n  }\n\n  public setDeleteId(id: string) {\n    this.delId = id;\n  }\n\n  // for update\n  private upadte_data(id: string) {\n    this.userService.updated(id);\n  }\n\n  public handlePostResponse(res: any) {\n    this.is_error = false;\n    this.data = res.results;\n    this.sharedservice.showMsg(this.msg, 'success');\n    this.msg = '';\n    this.router.navigate(['/account']);\n  }\n\n  private handleResponse(res: any) {\n    this.data = res.results;\n  }\n\n  public handleError(err: any) {\n    this.is_error = true;\n    this.errInfo = err.error;\n  }\n\n  public deleteData() {\n    this.userService.deleteRecord(this.delId).subscribe(\n      data => this.handleDeleteResponse(data),\n      err => this.handleError(err)\n    );\n  }\n\n  // handle delete response\n  public handleDeleteResponse(res: any) {\n    this.data = res;\n    this.sharedservice.showMsg('successfully deleted!', 'success');\n    this.getUserDetails();\n  }\n  Logout() {\n    this.sharedservice.logout();\n  }\n\n  private navigateAccount() {\n    this.router.navigate(['/account']);\n  }\n\n  private navigateAdd() {\n    this.router.navigate(['/add']);\n  }\n\n  // search data\n  private getSearchData(name: string) {\n    this.userService.SearchAccountDeatils(name)\n      .subscribe(res => this.handleSearchResponse(res),\n        err => this.handleSearchError(err)\n      );\n  }\n\n  public handleSearchResponse(res: any) {\n    this.data = res.results;\n  }\n\n  private handleSearchError(err: any) {\n    if (err.status === 401) {\n      this.router.navigate(['/login']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions } from '@angular/http';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { SharedService } from '../shared/shared.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class UsersService {\n\n    uid = '';\n    constructor(\n        private http: HttpClient,\n        private sharedservice: SharedService,\n        private router: Router\n    ) { }\n    // url = 'http://127.0.0.1:8000/api/user/';\n    url = 'https://account-test-project.herokuapp.com/api/user/';\n\n    httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + this.sharedservice.getToken()\n        })\n    };\n\n    getUserDetails() {\n        return this.http.get(this.url, this.httpOptions);\n    }\n\n    updateData(username: string, fname: string, lname: string, email: string) {\n        return this.http.put(this.url + '/', {\n            username: username,\n            first_name: fname,\n            last_name: lname,\n            email: email,\n        }, this.httpOptions).map(\n            (res: Response) => this.handleMeResponse(res)).catch(\n                (err: Response) => this.handleMeError(err));\n    }\n\n    deleteRecord(id: string) {\n        return this.http.delete(this.url + id + '/', this.httpOptions);\n    }\n\n    private handleMeResponse(res: Response) {\n        return res;\n    }\n\n    private handleMeError(err: Response) {\n        return Observable.throw(err);\n    }\n\n    SearchAccountDeatils(name: string) {\n        return this.http.get(this.url + '?search=' + name, this.httpOptions).map(\n            (res: Response) => this.handleMeResponse(res)).catch(\n                (err: Response) => this.handleMeError(err));\n    }\n\n    updated(id: string) {\n        this.uid = id;\n        this.router.navigate(['/userdetails']);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}